{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/yinghaoxiao/Desktop/next-demo/pages/time.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport dynamic from 'next/dynamic';\nvar Loading = dynamic(_c = function _c() {\n  return import('../components/Loading');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('../components/Loading')];\n    },\n    modules: ['../components/Loading']\n  }\n});\n_c2 = Loading;\n\nvar Time = function Time() {\n  _s();\n\n  var _useState = useState(\"\"),\n      time = _useState[0],\n      setTime = _useState[1];\n\n  var _useState2 = useState(false),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var getNowTime = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var moment;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              setIsLoading(true);\n              _context.next = 4;\n              return new Promise(function (resolve) {\n                setTimeout(function () {\n                  setIsLoading(false);\n                  resolve();\n                }, 1000);\n              });\n\n            case 4:\n              _context.next = 6;\n              return import('moment');\n\n            case 6:\n              moment = _context.sent;\n              setTime(moment[\"default\"]().format());\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 10]]);\n    }));\n\n    return function getNowTime() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"\\u663E\\u793A\\u73B0\\u5728\\u7684\\u65F6\\u95F4\\uFF1A\", isLoading ? __jsx(Loading, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 22\n    }\n  }) : null, time), __jsx(\"button\", {\n    onClick: getNowTime,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"\\u70B9\\u51FB\\u83B7\\u53D6\\u6700\\u65B0\\u7684\\u65F6\\u95F4\"));\n};\n\n_s(Time, \"BjkXsl02ubzYUM0lgigSjN0A3M8=\");\n\n_c3 = Time;\nexport default Time;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Loading$dynamic\");\n$RefreshReg$(_c2, \"Loading\");\n$RefreshReg$(_c3, \"Time\");","map":{"version":3,"sources":["/Users/yinghaoxiao/Desktop/next-demo/pages/time.js"],"names":["React","useState","dynamic","Loading","Time","time","setTime","isLoading","setIsLoading","getNowTime","Promise","resolve","setTimeout","moment","format","console","log"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,cAApB;AAEA,IAAMC,OAAO,GAAGD,OAAO;AAAA,SAAC,OAAO,uBAAP,CAAD;AAAA;AAAA;AAAA;AAAA,kCAAQ,uBAAR;AAAA;AAAA,cAAQ,uBAAR;AAAA;AAAA,EAAvB;MAAMC,O;;AAEN,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AAAA,kBACOH,QAAQ,CAAC,EAAD,CADf;AAAA,MACVI,IADU;AAAA,MACJC,OADI;;AAAA,mBAEiBL,QAAQ,CAAC,KAAD,CAFzB;AAAA,MAEVM,SAFU;AAAA,MAECC,YAFD;;AAGjB,MAAMC,UAAU;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEfD,cAAAA,YAAY,CAAC,IAAD,CAAZ;AAFe;AAAA,qBAGT,IAAIE,OAAJ,CAAY,UAACC,OAAD,EAAa;AAC7BC,gBAAAA,UAAU,CAAC,YAAM;AACfJ,kBAAAA,YAAY,CAAC,KAAD,CAAZ;AACAG,kBAAAA,OAAO;AACR,iBAHS,EAGP,IAHO,CAAV;AAID,eALK,CAHS;;AAAA;AAAA;AAAA,qBASM,OAAO,QAAP,CATN;;AAAA;AASTE,cAAAA,MATS;AAUfP,cAAAA,OAAO,CAACO,MAAM,WAAN,GAAiBC,MAAjB,EAAD,CAAP;AAVe;AAAA;;AAAA;AAAA;AAAA;AAYfC,cAAAA,OAAO,CAACC,GAAR;;AAZe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAVP,UAAU;AAAA;AAAA;AAAA,KAAhB;;AAeA,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDACGF,SAAS,GAAG,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAiB,IAD7B,EAEGF,IAFH,CADF,EAKE;AAAQ,IAAA,OAAO,EAAEI,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DALF,CADF;AASD,CA3BD;;GAAML,I;;MAAAA,I;AA6BN,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react'\nimport dynamic from 'next/dynamic'\n\nconst Loading = dynamic(import('../components/Loading'))\n\nconst Time = () => {\n  const [time, setTime] = useState(\"\")\n  const [isLoading, setIsLoading] = useState(false)\n  const getNowTime = async () => {\n    try {\n      setIsLoading(true)\n      await new Promise((resolve) => {\n        setTimeout(() => {\n          setIsLoading(false)\n          resolve()\n        }, 1000)\n      })\n      const moment = await import('moment')\n      setTime(moment.default().format())\n    } catch (e) {\n      console.log(e)\n    }\n  }\n  return (\n    <>\n      <span>显示现在的时间：\n        {isLoading ? <Loading /> : null}\n        {time}\n      </span>\n      <button onClick={getNowTime}>点击获取最新的时间</button>\n    </>\n  )\n}\n\nexport default Time"]},"metadata":{},"sourceType":"module"}